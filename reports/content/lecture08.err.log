Traceback (most recent call last):
  File "/home/alexandrasouverneva/Desktop/my-book-files/venv/lib64/python3.9/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/alexandrasouverneva/Desktop/my-book-files/venv/lib64/python3.9/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/alexandrasouverneva/Desktop/my-book-files/venv/lib64/python3.9/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/alexandrasouverneva/Desktop/my-book-files/venv/lib64/python3.9/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
  File "/usr/lib64/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/home/alexandrasouverneva/Desktop/my-book-files/venv/lib64/python3.9/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/alexandrasouverneva/Desktop/my-book-files/venv/lib64/python3.9/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/alexandrasouverneva/Desktop/my-book-files/venv/lib64/python3.9/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import time
import requests
from io import StringIO

df_smiles = pd.DataFrame()
list_dfs = []  # temporary list of data frames

for i in range(0, num_chunks) :
    
    idx1 = chunk_size * i
    idx2 = chunk_size * (i + 1)
    cidstr = ",".join( str(x) for x in cids[idx1:idx2] )

    url = ('https://pubchem.ncbi.nlm.nih.gov/rest/pug/compound/cid/' + cidstr + '/property/IsomericSMILES/TXT')
    res = requests.get(url)
    data = pd.read_csv( StringIO(res.text), header=None, names=['smiles'] )
    list_dfs.append(data)
    
    time.sleep(0.2)
    
    if ( i % 5 == 0 ) :
        print("Processing Chunk ", i)   

#    if ( i == 2 ) : break  #- for debugging

df_smiles = pd.concat(list_dfs,ignore_index=True)
df_smiles[ 'cid' ] = cids
df_smiles.head(5)
------------------

----- stdout -----
Processing Chunk  0
----- stdout -----
Processing Chunk  5
----- stdout -----
Processing Chunk  10
----- stdout -----
Processing Chunk  15
----- stdout -----
Processing Chunk  20
----- stdout -----
Processing Chunk  25
----- stdout -----
Processing Chunk  30
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
Cell [0;32mIn[29], line 27[0m
[1;32m     24[0m [38;5;66;03m#    if ( i == 2 ) : break  #- for debugging[39;00m
[1;32m     26[0m df_smiles [38;5;241m=[39m pd[38;5;241m.[39mconcat(list_dfs,ignore_index[38;5;241m=[39m[38;5;28;01mTrue[39;00m)
[0;32m---> 27[0m [43mdf_smiles[49m[43m[[49m[43m [49m[38;5;124;43m'[39;49m[38;5;124;43mcid[39;49m[38;5;124;43m'[39;49m[43m [49m[43m][49m [38;5;241m=[39m cids
[1;32m     28[0m df_smiles[38;5;241m.[39mhead([38;5;241m5[39m)

File [0;32m~/Desktop/my-book-files/venv/lib64/python3.9/site-packages/pandas/core/frame.py:4316[0m, in [0;36mDataFrame.__setitem__[0;34m(self, key, value)[0m
[1;32m   4313[0m     [38;5;28mself[39m[38;5;241m.[39m_setitem_array([key], value)
[1;32m   4314[0m [38;5;28;01melse[39;00m:
[1;32m   4315[0m     [38;5;66;03m# set column[39;00m
[0;32m-> 4316[0m     [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_set_item[49m[43m([49m[43mkey[49m[43m,[49m[43m [49m[43mvalue[49m[43m)[49m

File [0;32m~/Desktop/my-book-files/venv/lib64/python3.9/site-packages/pandas/core/frame.py:4529[0m, in [0;36mDataFrame._set_item[0;34m(self, key, value)[0m
[1;32m   4519[0m [38;5;28;01mdef[39;00m[38;5;250m [39m[38;5;21m_set_item[39m([38;5;28mself[39m, key, value) [38;5;241m-[39m[38;5;241m>[39m [38;5;28;01mNone[39;00m:
[1;32m   4520[0m [38;5;250m    [39m[38;5;124;03m"""[39;00m
[1;32m   4521[0m [38;5;124;03m    Add series to DataFrame in specified column.[39;00m
[1;32m   4522[0m 
[0;32m   (...)[0m
[1;32m   4527[0m [38;5;124;03m    ensure homogeneity.[39;00m
[1;32m   4528[0m [38;5;124;03m    """[39;00m
[0;32m-> 4529[0m     value, refs [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_sanitize_column[49m[43m([49m[43mvalue[49m[43m)[49m
[1;32m   4531[0m     [38;5;28;01mif[39;00m (
[1;32m   4532[0m         key [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39mcolumns
[1;32m   4533[0m         [38;5;129;01mand[39;00m value[38;5;241m.[39mndim [38;5;241m==[39m [38;5;241m1[39m
[1;32m   4534[0m         [38;5;129;01mand[39;00m [38;5;129;01mnot[39;00m [38;5;28misinstance[39m(value[38;5;241m.[39mdtype, ExtensionDtype)
[1;32m   4535[0m     ):
[1;32m   4536[0m         [38;5;66;03m# broadcast across multiple columns if necessary[39;00m
[1;32m   4537[0m         [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28mself[39m[38;5;241m.[39mcolumns[38;5;241m.[39mis_unique [38;5;129;01mor[39;00m [38;5;28misinstance[39m([38;5;28mself[39m[38;5;241m.[39mcolumns, MultiIndex):

File [0;32m~/Desktop/my-book-files/venv/lib64/python3.9/site-packages/pandas/core/frame.py:5273[0m, in [0;36mDataFrame._sanitize_column[0;34m(self, value)[0m
[1;32m   5270[0m     [38;5;28;01mreturn[39;00m _reindex_for_setitem(value, [38;5;28mself[39m[38;5;241m.[39mindex)
[1;32m   5272[0m [38;5;28;01mif[39;00m is_list_like(value):
[0;32m-> 5273[0m     [43mcom[49m[38;5;241;43m.[39;49m[43mrequire_length_match[49m[43m([49m[43mvalue[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mindex[49m[43m)[49m
[1;32m   5274[0m arr [38;5;241m=[39m sanitize_array(value, [38;5;28mself[39m[38;5;241m.[39mindex, copy[38;5;241m=[39m[38;5;28;01mTrue[39;00m, allow_2d[38;5;241m=[39m[38;5;28;01mTrue[39;00m)
[1;32m   5275[0m [38;5;28;01mif[39;00m (
[1;32m   5276[0m     [38;5;28misinstance[39m(value, Index)
[1;32m   5277[0m     [38;5;129;01mand[39;00m value[38;5;241m.[39mdtype [38;5;241m==[39m [38;5;124m"[39m[38;5;124mobject[39m[38;5;124m"[39m
[0;32m   (...)[0m
[1;32m   5280[0m     [38;5;66;03m# TODO: Remove kludge in sanitize_array for string mode when enforcing[39;00m
[1;32m   5281[0m     [38;5;66;03m# this deprecation[39;00m

File [0;32m~/Desktop/my-book-files/venv/lib64/python3.9/site-packages/pandas/core/common.py:573[0m, in [0;36mrequire_length_match[0;34m(data, index)[0m
[1;32m    569[0m [38;5;250m[39m[38;5;124;03m"""[39;00m
[1;32m    570[0m [38;5;124;03mCheck the length of data matches the length of the index.[39;00m
[1;32m    571[0m [38;5;124;03m"""[39;00m
[1;32m    572[0m [38;5;28;01mif[39;00m [38;5;28mlen[39m(data) [38;5;241m!=[39m [38;5;28mlen[39m(index):
[0;32m--> 573[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[1;32m    574[0m         [38;5;124m"[39m[38;5;124mLength of values [39m[38;5;124m"[39m
[1;32m    575[0m         [38;5;124mf[39m[38;5;124m"[39m[38;5;124m([39m[38;5;132;01m{[39;00m[38;5;28mlen[39m(data)[38;5;132;01m}[39;00m[38;5;124m) [39m[38;5;124m"[39m
[1;32m    576[0m         [38;5;124m"[39m[38;5;124mdoes not match length of index [39m[38;5;124m"[39m
[1;32m    577[0m         [38;5;124mf[39m[38;5;124m"[39m[38;5;124m([39m[38;5;132;01m{[39;00m[38;5;28mlen[39m(index)[38;5;132;01m}[39;00m[38;5;124m)[39m[38;5;124m"[39m
[1;32m    578[0m     )

[0;31mValueError[0m: Length of values (6791) does not match length of index (102)

